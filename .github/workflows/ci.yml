name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: TypeScript check (frontend)
      run: yarn test:ts:front

    - name: TypeScript check (backend)
      run: yarn test:ts:back

    - name: Build plugin
      run: yarn build

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Build plugin (handled by prepublishOnly)
      run: echo "Build will be handled by prepublishOnly hook"

    - name: Check if version changed
      id: version_check
      run: ./check-version.sh

    - name: Publish to NPM
      if: steps.version_check.outputs.version_exists == 'false'
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        echo "Publishing version ${{ steps.version_check.outputs.current_version }} to NPM..."
        yarn publish --access public

    - name: Create GitHub Release
      if: steps.version_check.outputs.version_exists == 'false'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version_check.outputs.current_version }}
        release_name: Release ${{ steps.version_check.outputs.current_version }}
        body: |
          ðŸš€ **strapi-plugin-preview v${{ steps.version_check.outputs.current_version }}**
          
          ## Changes
          - Check the commit history for detailed changes
          
          ## Installation
          ```bash
          yarn add strapi-plugin-preview@${{ steps.version_check.outputs.current_version }}
          ```
          
          ## Documentation
          See the [README](https://github.com/avorati/strapi-plugin-preview#readme) for usage instructions.
        draft: false
        prerelease: false

    - name: Skip publish (version exists)
      if: steps.version_check.outputs.version_exists == 'true'
      run: |
        echo "ðŸ”„ Skipping publish - version ${{ steps.version_check.outputs.current_version }} already exists"
        echo "ðŸ’¡ To publish a new version, update the version in package.json"